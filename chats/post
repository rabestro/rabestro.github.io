#!/usr/bin/env bash
#
# Copyright (c) 2023 Jegors ÄŒemisovs
# License: MIT
# Repository: https://github.com/rabestro/gpt4-session-to-markdown
#
# Converts GPT-4 chat session JSON data into readable Markdown format
#

create_file_name() {
  jq --raw-output '.history[0].name | ascii_downcase | gsub("[^a-z0-9]+"; "-")' "$1"
}

conversation() {
  local -r input_file="$1"
  cat <<EOF

## The AI Conversation Log

{% raw %}

$(jq --raw-output '.history[0].messages | map((
  if .role == "user" then "ðŸ‘¤" else "ðŸ¤–" end
  )+ " \(.content)\n") | join("\n")' "$input_file")

{% endraw %}

EOF
}

readonly file_json="$1"
readonly file_name=$(create_file_name "$file_json")
readonly current_date=$(date '+%Y-%m-%d')
readonly current_time=$(date '+%H:%M:%S')
readonly file_post="../_posts/$current_date-$file_name.md"

readonly title=$(jq --raw-output '.history[0].name' "$file_json")
readonly prompt=$(jq --raw-output '.history[0].prompt' "$file_json")

echo "Title: $title"
echo "File: $file_name"

cat << EOF > "$file_post"
---
title: "$title"
date: $current_date $current_time +0300
categories: [AI]
tags: [ai]
mermaid: true
---

## The system prompt used

$prompt

EOF

conversation "$file_json" >>"$file_post"
